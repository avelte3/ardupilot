<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="http://gtri.gatech.edu"?>
<runscript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    name="Straight flying">

  <!--  <run start="0.0" end="100" dt="0.00833333" -->
  <run start="0.0" end="10000000" dt="0.001"
       time_warp="1"
       enable_gui="true"
       network_gui="false"
       start_paused="false"/>

  <stream_port>50051</stream_port>
  <stream_ip>localhost</stream_ip>

  <end_condition>all_dead</end_condition> <!-- time, one_team, none-->

  <grid_spacing>10</grid_spacing>
  <grid_size>1000</grid_size>

  <!--<terrain>mcmillan</terrain>-->
  <background_color>191 191 191</background_color> <!-- Red Green Blue -->
  <gui_update_period>10</gui_update_period> <!-- milliseconds -->

  <plot_tracks>false</plot_tracks>
  <output_type>all</output_type>
  <show_plugins>false</show_plugins>

  <metrics>SimpleCollisionMetrics</metrics>

  <log_dir>~/.scrimmage/logs</log_dir>

  <latitude_origin>${latitude_origin=32.42553}</latitude_origin>
  <longitude_origin>${longitude_origin=-84.79109}</longitude_origin>
  <altitude_origin>${altitude_origin=75}</altitude_origin>

  <show_origin>true</show_origin>
  <origin_length>10</origin_length>

  <network>LocalNetwork</network>
  <network>GlobalNetwork</network>

  <entity_interaction>SimpleCollision</entity_interaction>
  <entity_interaction enable_startup_collisions="false"
                      remove_on_collision="false">GroundCollision</entity_interaction>

  <!-- uncomment "seed" and use integer for deterministic results -->
  <!--<seed>2147483648</seed>-->

{% for i in dic %}
  <entity>
    <team_id>{{ dic[i].team or 1 }}</team_id>
    <color>77 77 255</color>
    <count>1</count>
    <health>1</health>
    <radius>1</radius>

    <x>{{ dic[i].x or i }}</x>
    <y>{{ dic[i].y or 0.0 }}</y>
    <z>{{ dic[i].z or 0.0 }}</z>
    <heading>${heading={{ dic[i].heading }} }</heading>

    <latitude>{{ dic[i].lat }} </latitude>
    <longitude>{{ dic[i].lon }} </longitude>
    <altitude>{{ dic[i].altitude }} </altitude>


    <sensor>RigidBody6DOFStateSensor</sensor>

    {% if dic[i].vehicle == 'ArduCopter' %}
    <autonomy servo_map = "[ motor_0 0 1000 +2000    346.41 1200.0 +1 ]
                           [ motor_1 1 1000 +2000    346.41 1200.0 +1 ]
                           [ motor_2 2 1000 +2000    346.41 1200.0 +1 ]
                           [ motor_3 3 1000 +2000    346.41 1200.0 +1 ]"
              to_ardupilot_port="${to_arducopter_port=55{{i}}5}"
              from_ardupilot_port="${from_arducopter_port=55{{i}}4}"
              to_ardupilot_ip="${to_ardupilot_ip=127.0.0.1}"
        >ArduPilot</autonomy>
    <motion_model write_csv="true">${motion_model=Multirotor}</motion_model>
    {% else %}
    <autonomy to_ardupilot_port="${to_arduplane_port=55{{i}}1}"
              from_ardupilot_port="${from_arduplane_port=55{{i}}2}"
              to_ardupilot_ip="${to_ardupilot_ip=127.0.0.1}"
        >ArduPilot</autonomy>
    <motion_model drawVel="0" drawAngVel="0" drawAcc="0">${motion_model=JSBSimControl}</motion_model>
    {% endif %}
    <controller>DirectController</controller>
    <visual_model>${visual_model=iris}</visual_model>

  </entity>
{% endfor %}
</runscript>
